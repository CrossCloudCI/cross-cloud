#cloud-config
package_upgrade: true
packages:
  - [ docker.io ]
runcmd:
  - [ systemctl, restart, systemd-resolved ]
  - [ systemctl, restart, systemd-hostnamed ]
  - [ systemctl, start, bins ]
  - [ systemctl, start, docker ]
  - [ systemctl, start, kubelet ]
  - [ rm, /etc/resolv.conf ]
  - [ ln, -s, /run/systemd/resolve/resolv.conf, /etc/resolv.conf ]
  - [ systemctl, enable, kubelet ]

write_files:
  - path: /etc/systemd/system/bins.service
    content: |
      [Unit]
      Description=Download Binaries
      [Service]
      Type=oneshot
      RemainAfterExit=yes
      ExecStartPre=/bin/bash -c "while true; do ping -c1 www.google.com -4 > /dev/null && break; done"
      ExecStartPre=/bin/mkdir --parents /opt/cni/bin
      ExecStartPre=/bin/mkdir --parents /etc/cni/net.d
      ExecStartPre=/bin/mkdir --parents /home/kubernetes/bin
      ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /home/kubernetes/bin/kubelet ${ kubelet_artifact }
      ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /tmp/cni.tar ${ cni_artifact }
      ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /tmp/cni-plugins.tar ${ cni_plugins_artifact }
      ExecStart=/bin/tar -xvf /tmp/cni.tar -C /opt/cni/bin/
      ExecStart=/bin/tar -xvf /tmp/cni-plugins.tar -C /opt/cni/bin/
      ExecStart=/bin/chmod +x /home/kubernetes/bin/kubelet

  - path: /etc/systemd/system/kubelet.service
    content: |
      [Unit]
      Description=Kubernetes kubelet
      After=bins.service
      Requires=bins.service
      [Service]
      Restart=always
      RestartSec=10
      Environment="PATH=/opt/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      EnvironmentFile=/etc/default/kubelet
      ExecStartPre=/sbin/swapoff -a
      ExecStart=/home/kubernetes/bin/kubelet $KUBELET_OPTS
      [Install]
      WantedBy=multi-user.target

  - path: ${ hostname_path }
    content: |
      ${ hostname }

  - path: /etc/default/docker
    content: |
      DOCKER_OPTS="--ip-masq=false --iptables=false --log-driver=json-file --log-level=warn --log-opt=max-file=5 --log-opt=max-size=10m --storage-driver=overlay"

  - path: /etc/systemd/system/docker.service.d/docker.conf
    content: |
      [Service]
      EnvironmentFile=/etc/default/docker
      ExecStart=
      ExecStart=/usr/bin/dockerd -H fd:// $DOCKER_OPTS

  - path: /etc/default/kubelet
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ kubelet }

  - path: /var/lib/kubelet/bootstrap.kubeconfig
    encoding: "gzip+base64"
    content: |
      ${ kubelet_bootstrap_kubeconfig }

  - path: /etc/kubernetes/manifests/kube-proxy.yml
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ kube_proxy }

  - path: /var/lib/kube-proxy/kubeconfig
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ proxy_kubeconfig }

 
  - path: /etc/srv/kubernetes/pki/ca-certificates.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ ca }

  - path: /etc/srv/kubernetes/pki/kubelet.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ kubelet_crt }
      
  - path: /etc/srv/kubernetes/pki/kubelet.key
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ kubelet_key }
      
  - path: /etc/srv/kubernetes/pki/proxy.crt
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ proxy }
      
  - path: /etc/srv/kubernetes/pki/proxy.key
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ proxy_key }

  - path: /etc/srv/kubernetes/cloud-config
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ cloud_config_file }

  - path: /etc/systemd/resolved.conf.d/dns.conf
    permissions: 0644
    encoding: "gzip+base64"
    owner: root
    content: |
      ${ dns_conf }

  - path: /etc/dhcp/dhclient.conf
    permissions: 0644
    encoding: "gzip+base64"
    owner: root
    content: |
      ${ dns_dhcp }
