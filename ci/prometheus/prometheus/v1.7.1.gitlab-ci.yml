stages:
  - build
  - package
  - release
  - build-e2e

before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)
  - export CI_CONFIG_REPO=$(echo $CI_CONFIG_PATH | sed s:/raw.*$:.git:)
  - export GITLAB_API_ENDPOINT=$(echo $CI_PROJECT_URL | sed s:$CI_PROJECT_PATH:api/v4:)
  - export CROSS_CLOUD_NAMESPACE=$(echo $CI_CONFIG_REPO | sed s~`echo $CI_PROJECT_URL | sed s:$CI_PROJECT_PATH::`~~ | sed s:.git::)
  - export GITLAB_API_PRIVATE_TOKEN=$CI_BUILD_TOKEN
  - export BASE_URL=${BASE_URL:-$(dirname $CI_CONFIG_PATH)}

compile:
  image: golang:1.8.1
  stage: build
  variables:
    CGO_ENABLED: '0'
  script:
    - ln -s /builds /go/src/github.com
    - ln -s `dirname /go/src/github.com/$CI_PROJECT_PATH` /go/src/github.com/$CI_PROJECT_GROUP || true
    - cd /go/src/github.com/prometheus/prometheus
    - make -j $(getconf _NPROCESSORS_ONLN) build
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks

container:
  stage: package
  image: docker:17.05.0
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo export PROMETHEUS_IMAGE=$CI_REGISTRY_IMAGE | tee release.env
    - echo export PROMETHEUS_TAG=$IMAGE_TAG | tee -a release.env
    - cat release.env
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env

build-e2e:
  stage: build
  variables:
    PROMETHEUS_DOCKER_REGISTRY: "${CI_REGISTRY_IMAGE}"
    PROMETHEUS_DOCKER_IMAGE_TAG: "${CI_COMMIT_REF_SLUG}.job.${CI_JOB_ID}"
  script:
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - apk update ; apk add git # so we can build from git src
    - docker build -t "$CI_REGISTRY_IMAGE/prometheus-e2e:$PROMETHEUS_DOCKER_IMAGE_TAG" $CI_CONFIG_REPO#ci-centralized-config:ci/coredns/coredns/e2e/
    - docker push "$CI_REGISTRY_IMAGE/prometheus-e2e:$PROMETHEUS_DOCKER_IMAGE_TAG"

release:
  stage: release
  image: ruby:2.3.3
  script:
    - gem install gitlab
    - target_project_id=$(ruby -e "require 'gitlab' ; p=Gitlab.project_search('cross-cloud').find{|x| x.to_hash['path_with_namespace']=='${CROSS_CLOUD_NAMESPACE}'} ; print p.id if p")
    - echo cross-cloud is at $target_project_id
    - cat release.env
    - curl -X POST
        -F token=$CI_JOB_TOKEN
        -F ref=ci-stable-v0.1.0
        $GITLAB_API_ENDPOINT/projects/${target_project_id}/trigger/pipeline
  dependencies:
    - container
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.env
