#cloud-config

---
coreos:

  etcd2:
    advertise-client-urls: http://${ fqdn }:2379
    # cert-file: /etc/kubernetes/ssl/k8s-etcd.pem
    debug: true
    initial-advertise-peer-urls: https://${ fqdn }:2380
    # key-file: /etc/kubernetes/ssl/k8s-etcd-key.pem
    listen-client-urls: http://${ fqdn }:2379,http://127.0.0.1:2379
    listen-peer-urls: https://${ fqdn }:2380
    name: ${ fqdn } 
    discovery: ${ etcd_discovery }
    peer-trusted-ca-file: /etc/kubernetes/ssl/ca.pem
    peer-client-cert-auth: true
    peer-cert-file: /etc/kubernetes/ssl/k8s-etcd.pem
    peer-key-file: /etc/kubernetes/ssl/k8s-etcd-key.pem

  units:
    - name: etcd2.service
      command: start

    - name: docker.service
      command: start

    - name: kubelet.service
      command: start
      content: |
        [Service]
        Environment=KUBELET_IMAGE_URL=docker://${ kubelet_image_url }
        Environment=KUBELET_IMAGE_TAG=${ kubelet_image_tag }
        Environment="RKT_RUN_ARGS=--uuid-file-save=/var/run/kubelet-pod.uuid \
        --insecure-options=image \
        --volume var-log,kind=host,source=/var/log \
        --mount volume=var-log,target=/var/log \
        --volume dns,kind=host,source=/etc/resolv.conf \
        --mount volume=dns,target=/etc/resolv.conf"
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        ExecStartPre=-/usr/bin/rkt rm --uuid-file=/var/run/kubelet-pod.uuid
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
        --api-servers=http://127.0.0.1:8080 \
        --register-schedulable=false \
        --cni-conf-dir=/etc/kubernetes/cni/net.d \
        --network-plugin=cni \
        --container-runtime=docker \
        --allow-privileged=true \
        --pod-manifest-path=/etc/kubernetes/manifests \
        --hostname-override=${ fqdn } \
        --cluster_dns=${ dns_service_ip } \
        --cluster_domain=${ cluster_domain }
        ExecStop=-/usr/bin/rkt stop --uuid-file=/var/run/kubelet-pod.uuid
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target

  update:
    reboot-strategy: etcd-lock

write-files:

  - path: /etc/kubernetes/cni/docker_opts_cni.env
    content: |
      DOCKER_OPT_BIP=""
      DOCKER_OPT_IPMASQ=""


  - path: /etc/kubernetes/manifests/kube-apiserver.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_apiserver }

  - path: /etc/kubernetes/manifests/kube-controller-manager.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_controller_manager }

  - path: /etc/kubernetes/manifests/kube-proxy.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_proxy }

  - path: /etc/kubernetes/manifests/kube-scheduler.yml
    encoding: "gzip+base64"
    content: |
      ${ kube_scheduler }

  - path: /etc/kubernetes/ssl/ca.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ ca }

  - path: /etc/kubernetes/ssl/k8s-etcd.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd }

  - path: /etc/kubernetes/ssl/k8s-etcd-key.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ etcd_key }

  - path: /etc/kubernetes/ssl/k8s-apiserver.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver }

  - path: /etc/kubernetes/ssl/k8s-apiserver-key.pem
    permissions: "0644"
    encoding: "gzip+base64"
    content: |
      ${ apiserver_key }
