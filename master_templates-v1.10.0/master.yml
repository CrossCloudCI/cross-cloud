#cloud-config

---
#coreos:
systemd:
  units:
    - name: systemd-resolved.service
      enable: true

    - name: systemd-hostnamed.service
      enable: true
    
    - name: docker.service
      enable: true
      drop-ins:
        - name: docker.conf
          contents: |
            [Service]
            EnvironmentFile=/etc/default/docker

    - name: bins.service
      enable: true
      contents: |
        [Unit]
        Description=Download Binaries
        After=network-online.target
        Requires=network-online.target
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStartPre=/usr/bin/bash -c "while true; do ping -c1 www.google.com > /dev/null && break; done"
        ExecStartPre=/usr/bin/mkdir --parents /home/kubernetes/bin
        ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /home/kubernetes/bin/etcd.tar.gz ${ etcd_artifact }
        ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /home/kubernetes/bin/kube-apiserver ${ kube_apiserver_artifact }
        ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /home/kubernetes/bin/kube-controller-manager ${ kube_controller_manager_artifact }
        ExecStart=/usr/bin/curl --retry-max-time 120 -L -o /home/kubernetes/bin/kube-scheduler ${ kube_scheduler_artifact }
        ExecStart=/usr/bin/tar -xzvf /home/kubernetes/bin/etcd.tar.gz -C /home/kubernetes/bin/ --strip-components=1
        ExecStart=/usr/bin/chmod +x /home/kubernetes/bin/etcd
        ExecStart=/usr/bin/chmod +x /home/kubernetes/bin/kube-apiserver
        ExecStart=/usr/bin/chmod +x /home/kubernetes/bin/kube-controller-manager
        ExecStart=/usr/bin/chmod +x /home/kubernetes/bin/kube-scheduler

    - name: etcd.service
      enable: true
      contents: |
        [Unit]
        Description=etcd
        Documentation=https://github.com/coreos/etcd
        After=bins.service
        Requires=bins.service
        
        [Service]
        Type=notify
        Restart=always
        RestartSec=10s
        LimitNOFILE=40000
        TimeoutStartSec=0

        Environment=ETCD_NAME=${ name }
        Environment=ETCD_DISCOVERY_SRV=${ etcd_discovery }
        Environment=ETCD_INITIAL_ADVERTISE_PEER_URLS=http://${ node }.${ etcd_discovery }:2380
        Environment=ETCD_INITIAL_CLUSTER_TOKEN=${ name }-etcd
        Environment=ETCD_INITIAL_CLUSTER_STATE=new       
        Environment=ETCD_ADVERTISE_CLIENT_URLS=http://${ node }.${ etcd_discovery }:4001       
        Environment=ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:4001
        Environment=ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
        Environment=ETCD_DATA_DIR=/var/etcd/data       
        
        ExecStart=/home/kubernetes/bin/etcd

        [Install]
        WantedBy=multi-user.target
        
    - name: kube-apiserver.service
      enable: true
      contents: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/kubernetes/kubernetes
        After=bins.service
        Requires=bins.service

        [Service]
        EnvironmentFile=/etc/default/kube-apiserver
        ExecStart=/home/kubernetes/bin/kube-apiserver $APISERVER_OPTS

        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target

    - name: kube-controller-manager.service
      enable: true
      contents: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/kubernetes/kubernetes
        After=bins.service
        Requires=bins.service

        [Service]
        EnvironmentFile=/etc/default/kube-controller-manager
        ExecStart=/home/kubernetes/bin/kube-controller-manager $CONTROLLER_OPTS
        
        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target

    - name: kube-scheduler.service
      enable: true
      contents: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/kubernetes/kubernetes
        After=bins.service
        Requires=bins.service

        [Service]
        EnvironmentFile=/etc/default/kube-scheduler
        ExecStart=/home/kubernetes/bin/kube-scheduler $SCHEDULER_OPTS 

        Restart=always
        RestartSec=5

        [Install]
        WantedBy=multi-user.target

  update:
    reboot-strategy: etcd-lock

storage:
  files:
    - path: ${ hostname_path }
      filesystem: "root"
      contents: 
        inline: |
          ${ hostname }

    - path: /etc/default/docker
      filesystem: "root"
      contents: 
        inline: |
          DOCKER_OPTS="--ip-masq=false --iptables=false --log-driver=json-file --log-level=warn --log-opt=max-file=5 --log-opt=max-size=10m --storage-driver=overlay"

    - path: /etc/default/kube-apiserver
      filesystem: "root"
      contents:
        base64: true
        inline: |
          ${ kube_apiserver }
  
    - path: /etc/default/kube-controller-manager
      filesystem: "root"
      contents:
        base64: true
        inline: |
          ${ kube_controller_manager }

    - path: /etc/default/kube-scheduler
      filesystem: "root"
      contents:
        base64: true
        inline: |
          ${ kube_scheduler }

    - path: /var/lib/kube-controller-manager/kubeconfig
      filesystem: "root"
      contents:
        base64: true
        inline: |
          ${ kube_controller_manager_kubeconfig }

    - path: /var/lib/kube-scheduler/kubeconfig
      filesystem: "root"
      contents:
        base64: true
        inline: |
          ${ kube_scheduler_kubeconfig }

    - path: /etc/srv/kubernetes/pki/ca-certificates.crt
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ ca }

    - path: /etc/srv/kubernetes/pki/ca-certificates.key
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ ca_key }

    - path: /etc/srv/kubernetes/pki/apiserver.crt
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ apiserver }

    - path: /etc/srv/kubernetes/pki/apiserver.key
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ apiserver_key }

    - path: /etc/srv/kubernetes/pki/controller.crt
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ controller }

    - path: /etc/srv/kubernetes/pki/controller.key
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ controller_key }

    - path: /etc/srv/kubernetes/pki/scheduler.crt
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ scheduler }

    - path: /etc/srv/kubernetes/pki/scheduler.key
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ scheduler_key }

    - path: /etc/srv/kubernetes/known_tokens.csv
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ known_tokens_csv }

    - path: /etc/srv/kubernetes/cloud-config
      filesystem: "root"
      mode: 0644
      contents:
        base64: true
        inline: |
          ${ cloud_config_file }

    - path: /etc/systemd/resolved.conf.d/dns.conf
      filesystem: "root"
      mode: 0644
      user:
        name: "root"
      contents: 
        base64: true
        inline: |
          ${ dns_conf }

    - path: /etc/dhcp/dhclient.conf
      filesystem: "root"
      mode: 0644
      user:
        name: "root"
      contents:
        base64: true
        inline: |
          ${ dns_dhcp }

passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDdCb/l7v2Gu44VQTeiUH1sQAmXQpKkJvdQUS2YriO/ysx+adfimT34fkhX7ZbiAC6kNKHFGQ6sRLnudVRv65N4P5SkQ27EtjS1W7rGEykZHarunq6szg5gAEFqVOrucn5Xey+iqDwMvM9w8pqKbJYvDy/7SGfz/cDvnWEcqIoYLy66IUPIaNwN7/eR6bZ7ab3IMpAkaR9gWrl4vpFql0fEVJgisbC8oPuX7sREhpaaO4BSWwEUyn97NnAFbDRN1fsohaLJVYD2vA6oXet/J5w0eFEGEgYAZuBB1VqbUXD4FfLxf8MP7qFniuCcfZHgzO5cbyK4xjrpknkHkk+b7sgON/2olCqM7+XDfgeuSxZgN9OJTRl2TesNMvhbXgFpnWJxIAkH0mbByDUNo+TQK58khTkVDlB6BOchRKN5EzKpUdzlBxVGJie35xAIqcFQGBw7E1nWBgDgAA9KXz4/jAdn3e81aOHzIGmVf9glj65TQRb2qQ4Rr/VwPfyUHCQTeGL5ykcHid7QbvMMXSx6EEXV4zP21vL98eOnwnoTyLD4JrxkEUAJS+9yxB75Ck6DF2AVkF+hnW0BUmcHI0BnWyXdb9SLsGwG4W0O4jOVXmq/yz+I5JkkPX4OB/eugetbb3L1CPczG/N0RbXCykU7TJdLSpBV27P7ho9JfK+UWAC2Gw== luoh@luoh-m01.vmware.com"
